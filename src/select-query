-- Select students with their full-name begin with 'Nguyen'
select *
from Students
where studentFullName like 'Nguyen%';

-- Select students has 'Anh' in their name
select *
from Students
where studentFullName like '% Anh%';

-- Looking for students with the age range 18-35
select *
from Students
where age between 18 and 35;

-- Looking for student with the ID of 12 or 13 or 5
select *
from Students
where studentID = 12
   or studentID = 5;

-- The number of students of each class
select className, count(studentFullName)
from Class
         join Students on Class.classID = Students.class_id
group by className;

-- The number of students of each address
select address, COUNT(studentID)
from Address
         join Students S on Address.addressID = S.address_ID
group by address;

-- The average points of courses
select courseName, avg(point)
from Course
         join Point P on Course.courseID = P.course_ID
group by courseName;

-- Display the course with max point
-- Manner 1:
create table averagePoint
    (
        select courseName, avg(point) as avgP
        from Course
                 join Point P on Course.courseID = P.course_ID
        group by courseName
    );

select course_ID, max(point) as mP
from Point
group by course_ID
having mP >= all (select max(point)
                  from Point
                  group by course_ID);

-- Manner 2:
select courseName, avg(point)
from Course
         join Point P on Course.courseID = P.course_ID
group by courseName
order by avg(point) desc
limit 1;

-- Manner 3: chi Kieu Anh goi y
select avg(point)
from Course
         join Point P on Course.courseID = P.course_ID
group by courseName;

select courseName, avg(point) as 'DTB_max'
from Course
         join Point P on Course.courseID = P.course_ID
group by courseName
having DTB_max >= all (select avg(point)
                       from Course
                                join Point P on Course.courseID = P.course_ID
                       group by courseName);

select courseName, avg(point) as 'DTB_max'
from Course
         join Point P on Course.courseID = P.course_ID
group by courseName
having DTB_max >= all (select avg(point)
                       from Point
                       group by course_ID);